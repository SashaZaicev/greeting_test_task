{"version":3,"sources":["components/Modal.tsx","components/GreetingStore.ts","components/GreetingForm.tsx","components/GreetingUser.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Modal","props","className","firstName","secondName","onClick","unShowModalWindow","store","show","user","lastName","error","showModalWindow","handlefirstNameInput","e","target","value","handlelastNameInput","makeAutoObservable","this","GreetingForm","observer","errors","borderError","borderError2","type","placeholder","onChange","GreetingStore","name","maxLength","pattern","autoFocus","required","GreetingUser","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQA4BeA,EAnBoB,SAACC,GAKhC,OACI,qBAAKC,UAAU,mBAAf,SACI,qBAAKA,UAAU,QAAf,SACI,4GAAmBD,EAAME,UAAzB,IAAqCF,EAAMG,WACvC,8BACI,wBAAQC,QATT,WACfJ,EAAMK,qBAQU,kE,qBCoBT,MA3BX,aAAe,IAAD,gCATdC,MAAQ,CACJC,MAAM,EACNC,KAAM,CACFN,UAAW,GACXO,SAAU,IAEdC,OAAO,GAGG,KAIdC,gBAAkB,WAEZ,EAAKL,MAAME,KAAKN,WAAc,EAAKI,MAAME,KAAKC,SAE5C,EAAKH,MAAMC,MAAS,EAAKD,MAAMC,KAD7B,EAAKD,MAAMI,OAAQ,GAPf,KAUdL,kBAAoB,WAChB,EAAKC,MAAMC,MAAS,EAAKD,MAAMC,KAC1B,EAAKD,MAAMC,OACZ,EAAKD,MAAME,KAAKN,UAAY,GAC5B,EAAKI,MAAME,KAAKC,SAAW,KAdrB,KAiBdG,qBAAuB,SAACC,GACpB,EAAKP,MAAMI,OAAQ,EACnB,EAAKJ,MAAME,KAAKN,UAAYW,EAAEC,OAAOC,OAnB3B,KAqBdC,oBAAsB,SAACH,GACnB,EAAKP,MAAMI,OAAQ,EACnB,EAAKJ,MAAME,KAAKC,SAAWI,EAAEC,OAAOC,OAtBpCE,YAAmBC,OC2CZC,EA5C8BC,aAAS,SAACpB,GAEnD,IAAMU,EAAQV,EAAMqB,OAAS,oGAAsB,GAC7CC,EACDtB,EAAMqB,QAAoC,KAA1BrB,EAAMM,MAAMJ,UACvB,aAAe,GACnBqB,EAAgBvB,EAAMqB,QAAmC,KAAzBrB,EAAMM,MAAMG,SAC5C,aAAe,GAErB,OACI,gCACI,gCACI,uBAAOR,UAAWqB,GAA4B,GACvCE,KAAK,OACLT,MAAOf,EAAMM,MAAMJ,UACnBuB,YAAY,aACZC,SAAUC,EAAcf,qBACxBgB,KAAM,YACNC,UAAW,GACXC,QAAQ,+CACRC,WAAW,EACXC,UAAQ,IAEf,uBAAO/B,UAAWsB,GAA8B,GACzCC,KAAK,OACLT,MAAOf,EAAMM,MAAMG,SACnBgB,YAAY,cACZC,SAAUC,EAAcX,oBACxBY,KAAM,WACNC,UAAW,GACXG,UAAQ,EACRF,QAAQ,oDAEnB,8BACI,wBACI1B,QAASuB,EAAchB,gBAD3B,oDAKJ,qBAAKV,UAAWD,EAAMqB,OAAS,QAAU,GAAzC,SAA8CX,UC2C3CuB,EAvFMb,aAAS,WAsBtB,IAAMd,EAAQqB,EAAcrB,MACtBe,EAASM,EAAcrB,MAAMI,MACnC,OACI,qBAAKT,UAAU,cAAf,SACKK,EAAMC,KAAO,cAAC,EAAD,CACNF,kBAAmBsB,EAActB,kBACjCH,UAAWI,EAAME,KAAKN,UACtBC,WAAYG,EAAME,KAAKC,WAC3B,qBAAKR,UAAU,WAAf,SACI,cAAC,EAAD,CACIoB,OAAQA,EACRf,MAAOA,EAAME,cC5B1B0B,MARf,WACI,OACI,qBAAKjC,UAAU,MAAf,SACI,cAAC,EAAD,OCOGkC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d9b16be9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Modal.scss'\r\n\r\ntype ModalType = {\r\n    unShowModalWindow: ()=> void\r\n    firstName: string\r\n    secondName: string\r\n}\r\n\r\nconst Modal: React.FC<ModalType> = (props) => {\r\n    const closeModal = () => {\r\n        props.unShowModalWindow()\r\n    }\r\n\r\n    return (\r\n        <div className=\"modalWindowBlock\">\r\n            <div className=\"modal\">\r\n                <div>Здравствуйте,{props.firstName} {props.secondName}\r\n                    <div>\r\n                        <button onClick={closeModal}>Закрыть</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Modal;","import {makeAutoObservable} from \"mobx\"\r\n\r\nclass GreetingStore {\r\n    store = {\r\n        show: false,\r\n        user: {\r\n            firstName: '',\r\n            lastName: ''\r\n        },\r\n        error: false\r\n    }\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    showModalWindow = () => {\r\n        // относится к баттону\r\n        (!this.store.user.firstName || !this.store.user.lastName)\r\n            ? this.store.error = true :\r\n            this.store.show = (!this.store.show)\r\n    }\r\n    unShowModalWindow = () =>{\r\n        this.store.show = (!this.store.show)\r\n        if (!this.store.show) {\r\n            this.store.user.firstName = ''\r\n            this.store.user.lastName = ''\r\n        }\r\n    }\r\n    handlefirstNameInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.store.error = false\r\n        this.store.user.firstName = e.target.value\r\n    };\r\n    handlelastNameInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.store.error = false\r\n        this.store.user.lastName = e.target.value\r\n    }\r\n}\r\n\r\nexport default new GreetingStore()","import React from 'react';\r\nimport GreetingStore from \"./GreetingStore\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\ntype GreetingType = {\r\n    store: {\r\n        firstName: string,\r\n        lastName: string\r\n    }\r\n    errors: boolean\r\n}\r\n\r\nconst GreetingForm: React.FC<GreetingType> = observer((props) => {\r\n\r\n    const error = props.errors ? 'Обязательное поле' : '';\r\n    const borderError =\r\n        (props.errors && props.store.firstName === '')\r\n            ? 'inputError' : \"\"\r\n    const borderError2 = (props.errors && props.store.lastName === '')\r\n        ? 'inputError' : \"\"\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <input className={borderError ? borderError : ''}\r\n                       type=\"text\"\r\n                       value={props.store.firstName}\r\n                       placeholder='first name'\r\n                       onChange={GreetingStore.handlefirstNameInput}\r\n                       name={'firstName'}\r\n                       maxLength={50}\r\n                       pattern='A-Za-zА-Яа-яЁё'\r\n                       autoFocus={true}\r\n                       required\r\n                />\r\n                <input className={borderError2 ? borderError2 : ''}\r\n                       type=\"text\"\r\n                       value={props.store.lastName}\r\n                       placeholder='second name'\r\n                       onChange={GreetingStore.handlelastNameInput}\r\n                       name={'lastName'}\r\n                       maxLength={50}\r\n                       required\r\n                       pattern='A-Za-zА-Яа-яЁё'\r\n                /></div>\r\n            <div>\r\n                <button\r\n                    onClick={GreetingStore.showModalWindow}\r\n                >Готово\r\n                </button>\r\n            </div>\r\n            <div className={props.errors ? 'error' : \"\"}>{error}</div>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default GreetingForm;","import React from 'react';\r\nimport \"./GreetingUser.scss\"\r\nimport Modal from \"./Modal\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport GreetingStore from \"./GreetingStore\";\r\nimport GreetingForm from \"./GreetingForm\";\r\n\r\nconst GreetingUser = observer(() => {\r\n\r\n        // const [show, setShow] = useState(false)\r\n        // const [firstName, setFirstName] = useState('')\r\n        // const [lastName, setLastName] = useState('')\r\n\r\n        // const showModalWindow = () => {\r\n        // setShow(!show)\r\n        // if (show) {\r\n        //     setFirstName('')\r\n        //     setLastName('')\r\n        // }\r\n        // }\r\n//     const handlefirstNameInput = (e: any) => {\r\n//         const firstName = e.target.value;\r\n//         setFirstName(firstName)\r\n//     };\r\n//     const handlelastNameInput = (e: any) => {\r\n//         const lastName = e.target.value;\r\n//         setLastName(lastName)\r\n//     }\r\n// }\r\n        const store = GreetingStore.store\r\n        const errors = GreetingStore.store.error\r\n        return (\r\n            <div className=\"greetingBox\">\r\n                {store.show ? <Modal\r\n                        unShowModalWindow={GreetingStore.unShowModalWindow}\r\n                        firstName={store.user.firstName}\r\n                        secondName={store.user.lastName}/> :\r\n                    <div className='bodyForm'>\r\n                        <GreetingForm\r\n                            errors={errors}\r\n                            store={store.user}\r\n                        />\r\n                        {/*{errors ?*/}\r\n                        {/*    <><input className='inputError' type=\"text\"*/}\r\n                        {/*             value={GreetingStore.store.user.firstName}*/}\r\n                        {/*             placeholder='first name'*/}\r\n                        {/*             onChange={GreetingStore.handlefirstNameInput}*/}\r\n                        {/*             name={'firstName'}*/}\r\n                        {/*             maxLength={50}*/}\r\n                        {/*             pattern='A-Za-zА-Яа-яЁё'*/}\r\n                        {/*    />*/}\r\n                        {/*        <div className={errors ? 'error' : \"\"}>Обязательное поле</div>*/}\r\n                        {/*    </>*/}\r\n                        {/*    : <input type=\"text\"*/}\r\n                        {/*             value={GreetingStore.store.user.firstName}*/}\r\n                        {/*             placeholder='first name'*/}\r\n                        {/*             onChange={GreetingStore.handlefirstNameInput}*/}\r\n                        {/*             name={'firstName'}*/}\r\n                        {/*             maxLength={50}*/}\r\n                        {/*             pattern='A-Za-zА-Яа-яЁё'*/}\r\n                        {/*             autoFocus={true}*/}\r\n                        {/*    />}*/}\r\n                        {/*{errors ?*/}\r\n                        {/*    <><input className='inputError'*/}\r\n                        {/*             type=\"text\"*/}\r\n                        {/*             value={GreetingStore.store.user.lastName}*/}\r\n                        {/*             placeholder='second name'*/}\r\n                        {/*             onChange={GreetingStore.handlelastNameInput}*/}\r\n                        {/*             name={'lastName'}*/}\r\n                        {/*             maxLength={50}*/}\r\n                        {/*             pattern='A-Za-zА-Яа-яЁё'*/}\r\n                        {/*    />*/}\r\n                        {/*        <div className={errors ? 'error' : \"\"}>Обязательное поле</div>*/}\r\n                        {/*    </>*/}\r\n                        {/*    : <input type=\"text\"*/}\r\n                        {/*             value={GreetingStore.store.user.lastName}*/}\r\n                        {/*             placeholder='second name'*/}\r\n                        {/*             onChange={GreetingStore.handlelastNameInput}*/}\r\n                        {/*             name={'lastName'}*/}\r\n                        {/*             maxLength={50}*/}\r\n                        {/*             required*/}\r\n                        {/*             pattern='A-Za-zА-Яа-яЁё'*/}\r\n                        {/*    />}*/}\r\n                        {/*<button*/}\r\n                        {/*    onClick={GreetingStore.showModalWindow}*/}\r\n                        {/*>Готово*/}\r\n                        {/*</button>*/}\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n)\r\n\r\nexport default GreetingUser;","import React from 'react';\nimport './App.scss';\nimport GreetingUser from \"./components/GreetingUser\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <GreetingUser/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}